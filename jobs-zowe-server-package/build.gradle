ext {
    artifactName = 'jobs-server-zowe-package'
}

configurations {
    jobsApiServerJar
    zip
}

dependencies {
    jobsApiServerJar(project(path: ":jobs-api-server", configuration: "bootArchives"))
}

task packageJobsApiServer(type: Zip) {
    archiveName = artifactName + ".zip"
    includeEmptyDirs = true

     into('/') {
        from configurations.jobsApiServerJar
    }

    into('scripts/') {
        from "$buildDir/convert/jobs-api-start.sh", "$buildDir/convert/jobs-api-configure.sh", "$buildDir/convert/jobs-api-validate.sh"
    }
}

packageJobsApiServer.doFirst {
    List<File> scriptFiles =  new ArrayList<File>() {{
        add(file('src/main/resources/scripts/jobs-api-start.sh'));
        add(file('src/main/resources/scripts/jobs-api-configure.sh'));
        add(file('src/main/resources/scripts/jobs-api-validate.sh'));
    }};
    for (File scriptFile : scriptFiles){
        def inputStream = new InputStreamReader(new FileInputStream(scriptFile), "ISO-8859-1");
        def lineReader = new BufferedReader(inputStream);
        def scriptOutputDir = new File("$buildDir/convert/");
        if (!scriptOutputDir.exists()) {
            scriptOutputDir.mkdirs();
        }
        File scriptConvertedOutput = new File("$buildDir/convert/"+scriptFile.getName());
        if (scriptConvertedOutput.exists()) {
            scriptConvertedOutput.delete();
        }
        scriptConvertedOutput.createNewFile();
        def printer = new PrintWriter(scriptConvertedOutput, "IBM-1047");
        def line;
        def eol = [10] as byte[]
        //  def ebcdicEol = [ 21 ] as byte []
        while ((line = lineReader.readLine()) != null) {
            printer.write(line);
            printer.write(new String(eol, "ISO-8859-1"))
        }
        printer.flush();
        printer.close();
    }
}

jar.dependsOn(packageJobsApiServer)
build.dependsOn(packageJobsApiServer)

artifacts {
    zip packageJobsApiServer
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact("$buildDir/distributions/$artifactName" + ".zip")
        }
    }
}
