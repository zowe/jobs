name: CI Testing

on:
  push:
    branches:
      - master
      - users/carson/migrate_to_gha # TODO remove after done dev
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      custom_zosmf_host:
        description: ZOSMF host
        type: string
        required: false
      custom_zosmf_port:
        description: ZOSMF port
        type: string
        required: false
      custom_ssh_port:
        description: SSH port
        type: string
        required: false
      custom_directory_root:
        description: Testing root directory
        type: string
        required: false

env:
  # TODO need a way to switch the marist credentials - use a GHA environment to hold host/ports and credentials?
  INTEGRATION_TEST_DIRECTORY_ROOT: ${{ github.event.inputs.custom_directory_root || '/ZOWE/tmp'  }}
  SSH_PORT: ${{ github.event.inputs.custom_ssh_port || 22 }}
  ZOSMF_HOST: ${{ github.event.inputs.custom_zosmf_host || 'zzow04.zowe.marist.cloud' }}
  ZOSMF_PORT: ${{ github.event.inputs.custom_zosmf_port || 10443 }}
  UID: jobs-integration-test-${{ github.run_id }}

jobs:
  UnitTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/setup

      - name: Build with Gradle
        run: ./gradlew build

      - name: Unit test with Gradle
        run: ./gradlew coverage

      - name: Store test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: UnitTestResults
          path: |
            build/reports/jacoco/jacocoFullReport/html
            jobs-api-server/build/reports/tests/test

      - uses: ./.github/actions/teardown

  IntegrationTest:
    runs-on: ubuntu-latest
    container: ubuntu:latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/setup

      # TODO need a lock on marist?
      - name: Setup APIML on marist for integration tests
        run: |
          chmod +x scripts/prepare-fvt.sh
          ./scripts/prepare-fvt.sh
          sleep 2m # Let setup finish
        env:
          FVT_ZOSMF_HOST: ${{ env.ZOSMF_HOST }}
          FVT_ZOSMF_PORT: ${{ env.ZOSMF_PORT }}
          FVT_SERVER_SSH_HOST: ${{ env.ZOSMF_HOST }}
          FVT_SERVER_SSH_PORT: ${{ env.SSH_PORT }}
          FVT_SERVER_SSH_USERNAME: ${{ secrets.MARIST_USERNAME }}
          FVT_SERVER_SSH_PASSWORD: ${{ secrets.MARIST_PASSWORD }}
          FVT_SERVER_DIRECTORY_ROOT: ${{ env.INTEGRATION_TEST_DIRECTORY_ROOT }}
          FVT_UID: ${{ env.UID }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Integration tests for v1 - LTPA
        run: >
          ./gradlew runIntegrationTests --info
          -Pserver.host=gateway-service
          -Pserver.port=7554
          -Pserver.username=${{ secrets.SSH_MARIST_USERNAMEP }}
          -Pserver.password=${{ secrets.SSH_MARIST_PASSWORDP }}
          -Ptest.version=1

      - name: Integration tests for v2 - JWT
        run: >
          ./gradlew runIntegrationTests --info
          -Pserver.host=gateway-service
          -Pserver.port=7554
          -Pserver.username=${{ secrets.SSH_MARIST_USERNAMEP }}
          -Pserver.password=${{ secrets.SSH_MARIST_PASSWORDP }}
          -Ptest.version=2

      - name: Display integration test logs
        if: always()
        run: |
          find .fvt/logs -type f | xargs -i sh -c 'echo \">>>>>>>>>>>>>>>>>>>>>>>> {} >>>>>>>>>>>>>>>>>>>>>>>\" && cat {}'

      - name: Clean up integration test directory
        if: always()
        run: |
          SSHPASS=${{ secrets.MARIST_PASSWORD }} sshpass -e ssh -tt -o StrictHostKeyChecking=no -o PubkeyAuthentication=no -p ${{ env.SSH_PORT }} ${{ secrets.MARIST_USERNAME }}@${{ env.ZOSMF_HOST }} << EOF
          cd ~
          [ -d "${{ env.INTEGRATION_TEST_DIRECTORY_ROOT }}/${{ env.UID }}" ] && rm -fr ${{ env.INTEGRATION_TEST_DIRECTORY_ROOT }}/${{ env.UID }}

      - name: Store test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: IntegrationTestResults
          path: |
            jobs-tests/build/reports/tests/test-1
            jobs-tests/build/reports/tests/test-2

      - uses: ./.github/actions/teardown

  SonarQubeScan:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/setup
        with:
          jdkVersion: 11

      - name: Sonar scan with Gradle
        run: >
          ./gradlew build coverage sonarqube
          -Psonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
          -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - uses: ./.github/actions/teardown
